security:
    # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'plaintext'
    # https://symfony.com/doc/current/security.html#loading-the-user-the-user-provider
    providers:
        users_in_memory:
            memory:
                users:
                    admin: { password: password, roles: [ 'ROLE_ADMIN' ] }
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        api:
            pattern: ^/api/
            stateless: true
            provider: users_in_memory
            jwt: ~
        main:
            json_login:
                check_path: /auth # The name in routes.yaml is enough for mapping
                username_path: username
                password_path: password
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure


    access_control:
        - { path: ^/docs, roles: PUBLIC_ACCESS }
        - { path: ^/api/users, roles: IS_AUTHENTICATED_FULLY, methods: [POST, PUT, DELETE] }
        - { path: ^/api/groups, roles: IS_AUTHENTICATED_FULLY, methods: [POST, PUT, DELETE] }
        - { path: ^/api/, roles: PUBLIC_ACCESS }
        
        # - { path: ^/auth, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        # - { path: ^/api/users, roles: IS_AUTHENTICATED_FULLY, methods: [GET] }
        # - { path: ^/api/groups, roles: IS_AUTHENTICATED_FULLY, methods: [GET] }

when@test:
    security:
        password_hashers:
            # By default, password hashers are resource intensive and take time. This is
            # important to generate secure password hashes. In tests however, secure hashes
            # are not important, waste resources and increase test times. The following
            # reduces the work factor to the lowest possible values.
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon
